
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}

### "#"为nginx配置注释   http模块
http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

	### server作用:内部创建服务器，监听端口号
    server {
		### server 监听的端口号
        listen       80;
		### 服务 name 配置域名
        server_name  www.amazecode.com;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;
		### 匹配所有url地址
        location / {
			### 表示存放在nginx根目录  默认为html(资源存放的目录)
            root   html;
			### 默认首页
            index  index.html index.htm;
        }
        ### 表示 /后面的路径地址不能带任何字符串,默认不区分大小写 www.amazecode.com/userName  这样的连接就访问不了
        #location =/ {
            ### 表示存放在nginx根目录  默认为html(资源存放的目录)
            #root   html;
            ### 默认首页
            #index  index.html index.htm;
        #}
        ### 表示 匹配项目名称为tomcat8080开头
        location /tomcat8080/ {
            ### 表示存放在nginx根目录  默认为html(资源存放的目录)
            proxy_pass http://127.0.0.1:8080/;
            ### 默认首页
            index  index.html index.htm;
        }

        ### 表示 匹配项目名称为tomcat8081开头
        location /tomcat8081/ {
            ### 表示存放在nginx根目录  默认为html(资源存放的目录)
            proxy_pass http://127.0.0.1:8081/;
            ### 默认首页
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
